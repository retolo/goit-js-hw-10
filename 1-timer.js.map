{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["\nimport flatpickr from \"flatpickr\";\n\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport { split } from \"postcss/lib/list\";\n\n\nimport iziToast from \"izitoast\";\n\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n\nconst dataDays = document.querySelector('[data-days]');\nconst dataHours = document.querySelector('[data-hours]');\nconst dataMinutes = document.querySelector('[data-minutes]');\nconst dataSeconds = document.querySelector('[data-seconds]');\n\nconst btn = document.querySelector('button');\n\n\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        const date = new Date();\n      if(selectedDates[0] > date){\n        btn.removeAttribute('disabled', '');\n \n        btn.addEventListener('click', ()=>{\n          btn.setAttribute('disabled', '');\n\n\n\n        const intervalId = setInterval(() =>{\n          const now = new Date();\n          const mili = selectedDates[0] - now;\n\n          if(mili <= 0){\n            clearInterval(intervalId);\n            updateClock(0, 0, 0, 0);\n            btn.removeEventListener()\n            return;\n          }\n          \n          const second = 1000;\n          const minute = second * 60;\n          const hour = minute * 60;\n          const day = hour * 24;\n        \n          // Remaining days\n          const days = Math.floor(mili / day);\n          // Remaining hours\n          const hours = Math.floor((mili % day) / hour);\n          // Remaining minutes\n          const minutes = Math.floor(((mili % day) % hour) / minute);\n          // Remaining seconds\n          const seconds = Math.floor((((mili % day) % hour) % minute) / second);\n\n          updateClock(days, hours, minutes, seconds);\n\n           \n\n        }, 1000);\n\n\n        })\n\n\n      }else{\n        btn.setAttribute('disabled', '');\n        iziToast.show({              \n          message: 'Please choose a date in the future'\n      })\n      }\n    },\n  };\n  \n\n  function updateClock(days, hours, minutes, seconds){\n    dataDays.textContent = String(days).padStart(2, '0');\n    dataHours.textContent = String(hours).padStart(2, '0');\n    dataMinutes.textContent = String(minutes).padStart(2, '0');\n    dataSeconds.textContent = String(seconds).padStart(2, '0');\n  }\n\n\n\n\nflatpickr('#datetime-picker', options);\n\n\n\n"],"names":["dataDays","dataHours","dataMinutes","dataSeconds","btn","options","selectedDates","date","intervalId","now","mili","updateClock","second","minute","hour","day","days","hours","minutes","seconds","iziToast","flatpickr"],"mappings":"+IAYA,MAAMA,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EAErDC,EAAM,SAAS,cAAc,QAAQ,EAIrCC,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACnB,MAAMC,EAAO,IAAI,KAChBD,EAAc,CAAC,EAAIC,GACpBH,EAAI,gBAAgB,WAAY,EAAE,EAElCA,EAAI,iBAAiB,QAAS,IAAI,CAChCA,EAAI,aAAa,WAAY,EAAE,EAIjC,MAAMI,EAAa,YAAY,IAAK,CAClC,MAAMC,EAAM,IAAI,KACVC,EAAOJ,EAAc,CAAC,EAAIG,EAEhC,GAAGC,GAAQ,EAAE,CACX,cAAcF,CAAU,EACxBG,EAAY,EAAG,EAAG,EAAG,CAAC,EACtBP,EAAI,oBAAqB,EACzB,MACD,CAED,MAAMQ,EAAS,IACTC,EAASD,EAAS,GAClBE,EAAOD,EAAS,GAChBE,EAAMD,EAAO,GAGbE,EAAO,KAAK,MAAMN,EAAOK,CAAG,EAE5BE,EAAQ,KAAK,MAAOP,EAAOK,EAAOD,CAAI,EAEtCI,EAAU,KAAK,MAAQR,EAAOK,EAAOD,EAAQD,CAAM,EAEnDM,EAAU,KAAK,MAAST,EAAOK,EAAOD,EAAQD,EAAUD,CAAM,EAEpED,EAAYK,EAAMC,EAAOC,EAASC,CAAO,CAI1C,EAAE,GAAI,CAGf,CAAS,IAIDf,EAAI,aAAa,WAAY,EAAE,EAC/BgB,EAAS,KAAK,CACZ,QAAS,oCACnB,CAAO,EAEF,CACL,EAGE,SAAST,EAAYK,EAAMC,EAAOC,EAASC,EAAQ,CACjDnB,EAAS,YAAc,OAAOgB,CAAI,EAAE,SAAS,EAAG,GAAG,EACnDf,EAAU,YAAc,OAAOgB,CAAK,EAAE,SAAS,EAAG,GAAG,EACrDf,EAAY,YAAc,OAAOgB,CAAO,EAAE,SAAS,EAAG,GAAG,EACzDf,EAAY,YAAc,OAAOgB,CAAO,EAAE,SAAS,EAAG,GAAG,CAC1D,CAKHE,EAAU,mBAAoBhB,CAAO"}